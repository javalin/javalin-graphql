name: Test all JDKs on all OSes

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java_version: [11, 17, 18] # Test all LTS releases and the latest one
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}
      - name: Grant execute permission for gradlew
        if: contains(matrix.os, 'win') == false
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

  publish:
    needs:
      - build
    name: "Publish to maven repo"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3.4.0
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Publish to Reposilite
        uses: gradle/gradle-build-action@v2.2.1
        env:
          MAVEN_NAME: '${{ secrets.MAVEN_NAME }}'
          MAVEN_TOKEN: '${{ secrets.MAVEN_TOKEN }}'
          ORG_GRADLE_PROJECT_signingKey: '${{ secrets.GPG_KEY }}'
          ORG_GRADLE_PROJECT_signingPassword: '${{ secrets.GPG_PASSPHRASE }}'
          ORG_GRADLE_PROJECT_signingKeyId: '${{ secrets.GPG_KEYID }}'
        with:
          arguments: publishMavenPublicationToReposiliteRepository

      - name: Publish to Maven Central
        if: "!contains(env.CURRENT_VERSION, 'SNAPSHOT')"
        uses: gradle/gradle-build-action@v2.2.1
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: '${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}'
          ORG_GRADLE_PROJECT_sonatypePassword: '${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}'
          ORG_GRADLE_PROJECT_signingKey: '${{ secrets.GPG_KEY }}'
          ORG_GRADLE_PROJECT_signingPassword: '${{ secrets.GPG_PASSPHRASE }}'
          ORG_GRADLE_PROJECT_signingKeyId: '${{ secrets.GPG_KEYID }}'
        with:
          arguments: publishToSonatype closeAndReleaseStagingRepository
